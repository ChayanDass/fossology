// SPDX-FileCopyrightText: © 2014-2018 Siemens AG
// SPDX-License-Identifier: FSFAP

function truncateText(text, limit = 50) {
    return text.length > limit ? text.substring(0, limit) + "..." : text;
}

var tableColumns = [
  {"sTitle": "{{ "Upload Name and Description"|trans }}", "sClass": "left"},
  {"sTitle": "{{ "Action"|trans }}", "sClass": "center", "bSortable": false, "bSearchable": false},
  {"sTitle": "{{ "Status"|trans }}", "sClass": "center", "bSortable": false, "bSearchable": false},
  {
    "sTitle": "{{ "Comment"|trans }}", 
    "sClass": "center cc", 
    "bSortable": false, 
    "bSearchable": false, 
    "mRender": function(data, type, row) {
      return '<span title="' + data + '">' + truncateText(data, 50) + '</span>';
    }
  },
  {"sTitle": "{{ "Main licenses"|trans }}", "sClass": "center", "bSearchable": false, "bSortable": false},
  {"sTitle": "{{ "Upload Date"|trans }}", "sClass": "center", "sType": "string", "bSearchable": false},
  {"sTitle": "{{ "Assigned to"|trans }}", "sClass": "center", "bSearchable": false}
];

var tableSorting = [
  [5, "desc"],
  [0, "asc"],
  [6, "desc"]
];

var folder = "{{ folder }}";
var browseTable;

// ✅ **Dummy Data for Testing**
var dummyData = [
    ["File1", "Edit", "Approved", "This is a very long comment that should be truncated when displayed in the table...", "GPL-3.0", "2025-03-05", "Admin"],
    ["File2", "Delete", "Pending", "Short comment", "MIT", "2025-03-05", "User"],
    ["File3", "View", "Rejected", "Another long comment that exceeds the limit and should be truncated...", "Apache-2.0", "2025-03-05", "Reviewer"]
];

var dataTableConfig = {
  "bServerSide": false,  // ✅ **Set to false for testing, true in production**
  "aaData": dummyData,  // ✅ **Dummy data used for now**
  "aoColumns": tableColumns,
  "aaSorting": tableSorting,
  "iDisplayLength": 50,
  "bProcessing": true,
  "bStateSave": true,
  "bRetrieve": true
};

function createBrowseTable() {
  var otable = $('#browsetbl').DataTable(dataTableConfig);
  return otable;
}

$(document).ready(function() {
  browseTable = createBrowseTable();
  
  $('.clickable-folder').click(function(event) {
    folder = $(this).attr('data-folder');
    browseTable.draw();
    $('#current-folder').text($(this).text());
    $('#browse-upload-all').val(folder);
    return false;
  });

  $('#browse-upload-all').button().change(function(event) {
    $('#browse-upload-all-label').removeClass("ui-state-focus ui-state-hover ui-state-active");
    var wholeFolder = $(this).prop('checked');
    if (wholeFolder) {
      $('#wholeFolder').switchClass('browse-upload-all-off', 'browse-upload-all-on');
      $('#markedUpload').switchClass('browse-upload-all-on', 'browse-upload-all-off');
    } else {
      $('#wholeFolder').switchClass('browse-upload-all-on', 'browse-upload-all-off');
      $('#markedUpload').switchClass('browse-upload-all-off', 'browse-upload-all-on');
    }
  });

  $("#searchFolderTree").on('keyup', function() {
    var folderName = $(this).val().toLowerCase();
    $("#tree li").each(function() {
      $(this).toggle($(this).text().toLowerCase().includes(folderName));
    });
  });
});

$('#nav-hider').click(function() {
  $('#nav-cell').hide('slow');
  $('#nav-shower').show('slow').removeAttr('hidden');
});

$('#nav-shower').click(function() {
  $('#nav-shower').hide('slow');
  $('#nav-cell').show('slow');
});

function removeMainLicense(uploadId, licenseId) {
  if (confirm("{{ 'Remove this license from the main license list?'|trans }}")) {
    $.getJSON("?mod=conclude-license&do=removeMainLicense&upload=" + uploadId + "&licenseId=" + licenseId)
      .done(function(data) {
        var table = createBrowseTable();
        table.draw(false);
      })
      .fail(failed);
  }
}

$('.multi-upload-agent').click(function() {
  $('#mod').val($(this).attr('name'));
  return true;
});

$(function() {
  $("#tree").treeview({
    collapsed: false,
    animated: "fast",
    control: "#sidetreecontrol",
    persist: "cookie",
    cookieId: "fossology_treeview"
  });
});
